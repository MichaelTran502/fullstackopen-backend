{"version":3,"sources":["components/Person.js","components/Persons.js","components/Filter.js","components/PersonForm.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Person","person","deleteButton","name","number","onClick","id","Persons","persons","map","Filter","search","handleSearch","value","onChange","PersonForm","addPerson","newName","handleNewName","newNumber","handleNewNumber","onSubmit","type","url","axios","get","then","response","data","newPerson","post","delete","put","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","filter","setNewFilter","notification","setNotification","useEffect","personService","returnedPersons","filteredPersons","toLowerCase","includes","event","target","preventDefault","length","find","n","window","confirm","returnedPerson","p","catch","error","concat","setTimeout","deletedPerson","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3534b6ab.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({person, deleteButton}) => {\n  return (\n    <div>\n      {person.name} {person.number} <button onClick={() =>deleteButton(person.id)}>delete</button>\n    </div>\n  )\n}\n\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({persons, deleteButton}) => {\n\n  return (\n    <div>\n      {persons.map(person => \n        <Person key={person.name} person={person} deleteButton={deleteButton}/>\n      )}\n    </div>\n  )\n}\n\nexport default Persons","import React from 'react'\n\nconst Filter = ({search, handleSearch }) => {\n  return (\n    <div>\n      filter shown with <input value={search} onChange={handleSearch}/>\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({addPerson, newName, handleNewName, newNumber, handleNewNumber}) => {\n  return (\n    <form onSubmit={addPerson}>\n    <div>\n      name: <input value={newName} onChange={handleNewName}/>\n    </div>\n    <div>\n      number: <input value={newNumber} onChange={handleNewNumber}/>\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n  )\n}\n\nexport default PersonForm","import axios from 'axios'\n\nconst url = '/api/persons';\n\nconst getAll = () => {\n  const request = axios.get(url);\n  return request.then(response => response.data);\n};\n\nconst create = (newPerson) => {\n  const request = axios.post(url, newPerson);\n  return request.then(response => response.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`${url}/${id}`)\n  return request.then(response =>  response.data);\n}\n\nconst update = (id, newPerson) => {\n  const request = axios.put(`${url}/${id}`, newPerson)\n  return request.then(response => response.data);\n}\n\nexport default { getAll, create, remove, update }","import React from 'react'\n\nconst Notification = ({ message }) => {\n\n  if (message === null) {\n    return null;\n  }\n\n  return (\n    <div className='error'>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [filter, setNewFilter] = useState('')\n  const [notification, setNotification] = useState(null)\n\n  useEffect(() => {\n    personService.getAll()\n      .then(returnedPersons => {\n        setPersons(returnedPersons)\n      })\n  }, [])\n\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    if (persons.filter(person =>\n      person.name.toLowerCase() === newPerson.name.toLowerCase()\n      ).length > 0) {\n        const person = persons.find(n => n.name.toLowerCase() === newPerson.name.toLowerCase());\n        if (window.confirm(`${person.name} is already added to the phonebook, replace the old number with a new one?`)) {\n          personService\n          .update(person.id, newPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(p => p.id !== person.id ? p : returnedPerson));\n            setNotification(`Changed number for ${returnedPerson.name}`);\n          })\n            .catch(error => {\n              setNotification(`Information of ${person.name} has already been removed from the server`)\n            })\n        }\n    } else {\n      personService.create(newPerson)\n        .then(returnedPerson =>  {\n          setPersons(persons.concat(returnedPerson));\n          setNotification(`Added ${returnedPerson.name}`)\n        })\n      }\n      setTimeout(() => {\n        setNotification(null)\n      }, 5000)\n      setNewName('');\n      setNewNumber('');\n  }\n\n  const handleNewName = (event) => {\n    //console.log(event.target.value);\n    setNewName(event.target.value);\n  }\n\n  // Add numbers\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value);\n  }\n\n  const handleNewFilter = (event) => {\n    setNewFilter(event.target.value);\n  }\n\n  // this has to be a constant, not function\n  const filteredPersons = persons.filter(person => \n    person.name.toLowerCase().includes(filter.toLowerCase()));\n  \n  const handleDelete = (id) => {\n    const person = persons.find(n => n.id === id);\n\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService.remove(id)\n        .then(deletedPerson => {\n          console.log(deletedPerson)\n          setPersons(persons.filter(n => n.id !== id))\n        })\n        .catch(error => {\n          setNotification(`the person ${person.name} was already deleted from the server`)\n          setPersons(persons.filter(n => n.id !== id))\n        })\n    }\n\n    setTimeout(() => {\n      setNotification(null);\n    }, 5000)\n\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} />\n      <Filter search={filter} handleSearch={handleNewFilter}/>\n      <h2>add a new</h2>\n      <PersonForm \n        addPerson={addPerson}\n        newName={newName}\n        handleNewName={handleNewName}\n        newNumber={newNumber}\n        handleNewNumber={handleNewNumber}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={filteredPersons} deleteButton={handleDelete}/>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}